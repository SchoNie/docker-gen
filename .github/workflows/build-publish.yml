name: Build and publish Docker images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
    tags:
      - "*.*.*"
    paths:
      - ".dockerignore"
      - ".github/workflows/build-publish.yml"
      - "Dockerfile.alpine"
      - "Dockerfile.debian"
      - "go.mod"
      - "go.sum"
      - "**.go"

jobs:
  multiarch-build:
    name: Build and publish image
    strategy:
      matrix:
        base: [alpine, debian]
    runs-on: ubuntu-latest
    if: (github.event_name == 'schedule' && github.repository == 'nginx-proxy/docker-gen') || (github.event_name != 'schedule')
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Retrieve version
        id: docker-gen_version
        run: echo "VERSION=$(git describe --tags)" >> "$GITHUB_OUTPUT"

      - name: Get Docker tags
        id: docker_meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ghcr.io/nginx-proxy/docker-gen
            nginxproxy/docker-gen
            jwilder/docker-gen
          tags: |
            type=semver,pattern={{version}},enable=${{ matrix.base == 'alpine' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.base == 'alpine' }}
            type=semver,suffix=-debian,pattern={{version}},enable=${{ matrix.base == 'debian' }}
            type=semver,suffix=-debian,pattern={{major}}.{{minor}},enable=${{ matrix.base == 'debian' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && matrix.base == 'alpine' }}
            type=raw,value=debian,enable=${{ github.ref == 'refs/heads/main' && matrix.base == 'debian' }}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ steps.docker-gen_version.outputs.VERSION }}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@5964de0df58d5ad28b04d8fe2e6b80ad47105b91 # v3.5.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.15.0
        with:
          context: .
          build-args: DOCKER_GEN_VERSION=${{ steps.docker-gen_version.outputs.VERSION }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          file: Dockerfile.${{ matrix.base }}
          sbom: true
          push: true
          provenance: mode=max
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
